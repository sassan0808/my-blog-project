#!/usr/bin/env tsx

// Áí∞Â¢ÉÂ§âÊï∞„ÅÆË™≠„ÅøËæº„Åø
import { config as loadEnv } from 'dotenv';
loadEnv({ path: '.env.local' });

import { promises as fs } from 'fs';
import { 
  createArticleWithImagesUseCase
} from './src/lib/application/use-cases/create-article-with-images';
import type { CreateArticleRequest } from './src/lib/application/use-cases/create-article-with-images';
import { ArticleCategories } from './src/lib/domain/entities/article';
import { ImagePlacements } from './src/lib/domain/entities/media.interface';
import { getDefaultConfigManager } from './src/lib/core/config/environment-config';
import { createDefaultLogger } from './src/lib/core/logging/console-logger';

async function createArticle() {
  try {
    console.log('üé® ÁîªÂÉè‰ªò„ÅçË®ò‰∫ã‰ΩúÊàê„Éê„ÉÉ„ÉÅÂÆüË°å‰∏≠...\n');

    // „Ç∑„Çπ„ÉÜ„É†ÂàùÊúüÂåñ
    const configManager = await getDefaultConfigManager();
    const config = configManager.getConfig();
    const logger = createDefaultLogger().child('BatchArticleCreation');
    const useCase = createArticleWithImagesUseCase(config, logger);

    // Ë®ò‰∫ãÂÜÖÂÆπ„ÇíË™≠„ÅøËæº„Åø
    const content = await fs.readFile('./article-content.txt', 'utf8');

    // „É™„ÇØ„Ç®„Çπ„Éà‰ΩúÊàê
    const request: CreateArticleRequest = {
      title: '„Äå„Å§„Åè„Çã„Äç„ÅÆÊ∞ë‰∏ªÂåñ „Äú„Éé„Éº„Ç≥„Éº„Éâ„Åã„ÇâAIÂØæË©±„Å∏„Äú',
      content: content,
      category: ArticleCategories.AI_UTILIZATION,
      tags: ['AIÊ¥ªÁî®', '„Éé„Éº„Ç≥„Éº„Éâ', 'Ê∞ë‰∏ªÂåñ', 'Claude Code', 'ÂâµÈÄ†ÊÄß'],
      images: [{
        filePath: '/mnt/c/Users/‰Ωê„ÄÖÊú®/Desktop/unnamed.jpg',
        altText: 'AIÊôÇ‰ª£„ÅÆ„ÇÇ„ÅÆ„Å•„Åè„ÇäÈù©ÂëΩ',
        caption: '„Éé„Éº„Ç≥„Éº„Éâ„Åã„ÇâAIÂØæË©±„Å∏„ÅÆ„Éë„É©„ÉÄ„Ç§„É†„Ç∑„Éï„Éà',
        placement: ImagePlacements.FIGURE
      }],
      seo: {
        metaTitle: 'AIÊôÇ‰ª£„ÅÆ„ÇÇ„ÅÆ„Å•„Åè„ÇäÈù©ÂëΩÔºö„Éé„Éº„Ç≥„Éº„Éâ„Åã„ÇâAIÂØæË©±„Å∏',
        metaDescription: '„Éé„Éº„Ç≥„Éº„Éâ„ÅÆÈôêÁïå„ÇíË∂Ö„Åà„ÄÅAIÂØæË©±„Å´„Çà„ÇãÁúü„ÅÆÂâµÈÄ†ÊÄß„ÅÆÊ∞ë‰∏ªÂåñ„ÇíÊèè„ÅèÁâ©Ë™û„ÄÇ„Ç´„Éï„Çß„Åß„ÅÆÂá∫‰ºö„ÅÑ„Åã„ÇâÂßã„Åæ„Çã„ÄÅÊñ∞„Åó„ÅÑÊôÇ‰ª£„ÅÆÂà∞Êù•„ÇíÊÑü„Åò„ÇãË®ò‰∫ã„ÄÇ'
      },
      publish: true,
      optimizeImages: true,
      analyzeImages: true
    };

    console.log('üìù Ë®ò‰∫ã‰ΩúÊàêÈñãÂßã...');
    console.log(`„Çø„Ç§„Éà„É´: ${request.title}`);
    console.log(`„Ç´„ÉÜ„Ç¥„É™„Éº: ${request.category}`);
    console.log(`ÊñáÂ≠óÊï∞: ${request.content.length}ÊñáÂ≠ó`);
    console.log(`ÁîªÂÉèÊï∞: ${request.images?.length || 0}ÂÄã\n`);

    // Ë®ò‰∫ã‰ΩúÊàêÂÆüË°å
    const result = await useCase.execute(request);

    if (result.success && result.article) {
      console.log('‚úÖ Ë®ò‰∫ã‰ΩúÊàêÊàêÂäüÔºÅ\n');
      console.log('üìä ÁµêÊûú:');
      console.log(`Ë®ò‰∫ãID: ${result.article.id}`);
      console.log(`„Çø„Ç§„Éà„É´: ${result.article.title}`);
      console.log(`URL: ${result.article.url}`);
      console.log(`„Çπ„ÉÜ„Éº„Çø„Çπ: ${result.article.status}`);
      
      if (result.article.publishedAt) {
        console.log(`ÂÖ¨ÈñãÊó•ÊôÇ: ${result.article.publishedAt.toLocaleString('ja-JP')}`);
      }

      if (result.uploadedImages.length > 0) {
        console.log(`\nüñºÔ∏è „Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åï„Çå„ÅüÁîªÂÉè: ${result.uploadedImages.length}ÂÄã`);
        result.uploadedImages.forEach((img, index) => {
          console.log(`${index + 1}. ${img.originalPath}`);
          console.log(`   URL: ${img.uploadedMedia.url}`);
        });
      }

      console.log(`\n‚è±Ô∏è Âá¶ÁêÜÊôÇÈñì: ${result.performance.totalTime}ms`);

      if (result.warnings.length > 0) {
        console.log('\n‚ö†Ô∏è Ë≠¶Âëä:');
        result.warnings.forEach(warning => console.log(`- ${warning}`));
      }

    } else {
      console.log('‚ùå Ë®ò‰∫ã‰ΩúÊàêÂ§±Êïó\n');
      if (result.errors.length > 0) {
        console.log('„Ç®„É©„Éº:');
        result.errors.forEach(error => console.log(`- ${error}`));
      }
    }

  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', (error as Error).message);
    process.exit(1);
  }
}

createArticle();